{"version":3,"sources":["components/Board.js","components/Box.js","components/Piece.js","components/Hands.js","utils.js","Game.js","App.js","registerServiceWorker.js","index.js"],"names":["styled","div","blink","keyframes","props","overlay","css","strong","Color","Wrapper","upSideDown","Icon","span","Piece","this","color","kind","reversed","getCharFromKind","Component","Hands","HandPiece","convertToJa","Hand","count","onClick","isMovableBox","state","x","y","_","find","movableBoxes","isDroppableBox","droppableBoxes","canPromotePlace","Black","canPromote","fromY","toY","ShogiPiece","canPromoteKind","require","Shogi","Game","shogi","board","hands","selectedBox","selectedHand","lastMovedBox","moveCount","turn","sfen","histories","emitter","on","data","bestmove","bestpv","console","log","match","string","chars","split","P","L","N","S","G","B","R","parseInt","a","b","c","d","e","f","g","h","i","parseDropMoveSFEN","drop","setState","finishTurn","table","fromX","toX","promote","parseMoveSFEN","move","length","prevSfen","initializeFromSFENString","Object","assign","slice","toSFENString","piece","get","movablePoints","getMovesFrom","map","to","getDropsBy","nextBoard","cloneDeep","undefined","kingPosition","numbers","position","forEach","getKingPosition","enemyPiecePoints","points","push","getPiecePoints","tmpShogi","point","isChecked","window","alert","confirm","getCurrentSfen","emit","isEmpty","select","reset","selectHand","getHandsSummary","isReversed","reverseNumbers","headNavNumbers","sideNavNumbers","gameRows","topHandsSummary","White","bottomHandsSummary","style","margin","maxWidth","keys","filter","handleClickHand","key","Board","Box","isLastMovedBox","handleClickBox","url","getBestMove","q","qs","stringify","byoyomi","axios","catch","error","App","nextMove","pv","EventEmitter","handleClickAI","event","target","value","preventDefault","game","result","situation","score_cp","textAlign","fontSize","observable","ref","handleClickWait","bind","handleClickReverse","JSON","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a74850bc.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst borderColor = \"#666\";\n\nexport default styled.div`\n  width: 360px;\n  height: 360px;\n  margin: 0 auto;\n  color: #fff;\n  border-bottom: 1px solid ${borderColor};\n  border-left: 1px solid ${borderColor};\n  display: grid;\n  grid-template: repeat(9, 1fr) / repeat(9, 1fr);\n`\n","import styled, { css, keyframes } from \"styled-components\";\n\nconst borderColor = \"#666\";\n\nconst blink = keyframes`\n  0% {opacity: 0.8}\n  100% {opacity: 1;}\n`;\n\nexport default styled.div`\n  background-color: #eee;\n  border-top: 1px solid ${borderColor};\n  border-right: 1px solid ${borderColor};\n  font-family: Helvetica;\n  font-weight: bold;\n  font-size: 1em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${props => props.overlay && css`\n    background: white;\n  `}\n  ${props => props.strong && css`\n    background: #ddd;\n    animation: ${blink} 1.5s ease-in 1 normal;\n  `}\n\n`\n","import React, { Component } from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\n\nconst Color = {\n  Black: 0,\n  White: 1\n};\n\nconst Wrapper = styled.div`\n  ${props => props.upSideDown && css`\n    transform: scale(1,-1);\n  `}\n`\n\nconst blink = keyframes`\n  0% {opacity: 1}\n  100% {opacity: 0.6;}\n`;\n\nconst Icon = styled.span`\n  color: #222;\n  font-size: 1.4em;\n  cursor: pointer;\n\n  ${props => props.blink && css`\n    animation: ${blink} 1.5s ease-in-out infinite alternate;\n  `}\n`;\n\nfunction getCharFromKind(kind) {\n  switch (kind) {\n    case \"FU\":\n      return \"歩\"\n    case \"KY\":\n      return \"香\"\n    case \"KE\":\n      return \"桂\"\n    case \"GI\":\n      return \"銀\"\n    case \"KI\":\n      return \"金\"\n    case \"TO\":\n      return \"と\"\n    case \"NY\":\n      return \"杏\"\n    case \"NK\":\n      return \"圭\"\n    case \"NG\":\n      return \"全\"\n    case \"KA\":\n      return \"角\"\n    case \"HI\":\n      return \"飛\"\n    case \"OU\":\n      // 玉と王があるけど考慮しないことにする\n      return \"玉\"\n    case \"UM\":\n      return \"馬\"\n    case \"RY\":\n      return \"龍\"\n    default:\n      return \"\"\n  }\n}\n\nexport default class Piece extends Component {\n  render() {\n    const {color, kind, blink, reversed} = this.props;\n    const upSideDown = reversed ? color === Color.Black : color === Color.White;\n    return (\n      <Wrapper upSideDown={upSideDown}>\n        <Icon blink={blink}>{getCharFromKind(kind)}</Icon>\n      </Wrapper>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\n// const baseColor = `#666`\n\nexport const Hands = styled.div`\n  height: 1em;\n  margin: 0;\n  padding: 15px 0;\n`;\n\nconst HandPiece = styled.span`\n  cursor: pointer;\n  font-size: 0.8em;\n  margin: 0.25em;\n  padding: 0.25em 0.5em;\n`\n\nfunction convertToJa(kind) {\n  switch (kind) {\n    case \"FU\":\n      return (\"歩\")\n    case \"KY\":\n      return (\"香\")\n    case \"KE\":\n      return (\"桂\")\n    case \"GI\":\n      return (\"銀\")\n    case \"KI\":\n      return (\"金\")\n    case \"KA\":\n      return (\"角\")\n    case \"HI\":\n      return (\"飛\")\n    default:\n      return (null)\n  }\n}\n\nexport class Hand extends Component {\n\n  render() {\n    const { kind, count, onClick } = this.props;\n\n    return (\n      <HandPiece onClick={onClick}>{`${convertToJa(kind)} ${count}`}</HandPiece>\n    )\n  }\n}\n\nexport default (props) => {\n  const { hands } = props;\n\n  return (\n    <Hands>\n      { Object.keys(hands).filter(x => hands[x] >= 0).map(x => (\n        <HandPiece>{`${convertToJa(x)} ${hands[x]}`} </HandPiece>\n      )) }\n    </Hands>\n  )\n}\n","import _ from 'lodash';\nimport { Shogi, Color, Piece as ShogiPiece } from \"shogi.js\";\n\nexport function getCurrentSfen(shogi, state) {\n  return shogi.toSFENString(state.moveCount);\n}\n\nexport function isDropMove(string) {\n  return string.match(/\\*/);\n}\n\nexport function parseMoveSFEN(string) {\n  const chars = string.split('');\n\n  const table = {\n    a: 1,\n    b: 2,\n    c: 3,\n    d: 4,\n    e: 5,\n    f: 6,\n    g: 7,\n    h: 8,\n    i: 9\n  }\n  return {\n    fromX: parseInt(chars[0], 10),\n    fromY: table[chars[1]],\n    toX: parseInt(chars[2], 10),\n    toY: table[chars[3]],\n    promote: chars[4] ? true : false\n  }\n}\n\nexport function parseDropMoveSFEN(string) {\n  const chars = string.split('');\n\n  const kindOf = {\n    P: 'FU',\n    L: 'KY',\n    N: 'KE',\n    S: 'GI',\n    G: 'KI',\n    B: 'KA',\n    R: 'HI',\n  }\n\n  const table = {\n    a: 1,\n    b: 2,\n    c: 3,\n    d: 4,\n    e: 5,\n    f: 6,\n    g: 7,\n    h: 8,\n    i: 9\n  }\n\n  return {\n    kind: kindOf[chars[0]],\n    x: parseInt(chars[2], 10),\n    y: table[chars[3]]\n  }\n}\n\nexport function isMovableBox(state, x, y) {\n  return _.find(state.movableBoxes, {x, y})\n}\n\nexport function isDroppableBox(state, x, y) {\n  return _.find(state.droppableBoxes, {x, y})\n}\n\nfunction canPromoteKind(kind) {\n  return ShogiPiece.canPromote(kind);\n}\n\nfunction canPromotePlace(color, y) {\n  return color === Color.Black ? y <= 3 : y >= 7;\n}\n\nexport function canPromote(kind, color, fromY, toY) {\n  if (!canPromoteKind(kind)) {\n    return false;\n  }\n\n  if (!canPromotePlace(color, fromY) && !canPromotePlace(color, toY)) {\n    return false;\n  }\n\n  return true;\n}\n\n\n\nexport function getKingPosition(color, board) {\n  const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  // 全ての position をチェック\n  let position = {};\n\n  // TODO: 途中で見つかったら loop を抜ける\n  numbers.forEach(y => {\n    numbers.forEach(x => {\n      const piece = board[x - 1][y - 1] || {};\n      if (piece.color === color && piece.kind === \"OU\") {\n        position = {x, y}\n      }\n    });\n  });\n\n  return position;\n}\n\nexport function getPiecePoints(color, board) {\n\n  const points = [];\n\n  const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  numbers.forEach(y => {\n    numbers.forEach(x => {\n      const piece = board[x - 1][y - 1] || {};\n      if (piece.color === color) {\n        points.push({x, y});\n      }\n    });\n  });\n\n  return points;\n}\n\nexport function isChecked(color, board) {\n\n  const kingPosition = getKingPosition(color, board);\n  const enemyColor = color === 0 ? 1 : 0;\n  const enemyPiecePoints = getPiecePoints(enemyColor, board);\n\n  const tmpShogi = new Shogi();\n  tmpShogi.board = Object.assign([], board);\n\n  for (let i = 0; i < enemyPiecePoints.length; i++) {\n    const point = enemyPiecePoints[i];\n    const {x, y} = point;\n    const movablePoints = tmpShogi.getMovesFrom(x, y);\n    const check = _.find(movablePoints, ({to}) => to.x === kingPosition.x && to.y === kingPosition.y);\n    if (check) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import React, { Component } from 'react';\n\nimport _ from 'lodash';\n\nimport Board from './components/Board';\nimport Box from './components/Box';\nimport Piece from './components/Piece';\nimport { Hands, Hand } from './components/Hands';\n\nimport {\n  isDropMove,\n  parseMoveSFEN,\n  parseDropMoveSFEN,\n  isMovableBox, // not util\n  isDroppableBox, // not util\n  canPromote,\n  // getKingPosition,\n  // getPieces,\n  isChecked\n} from './utils';\n\nconst { Shogi, Color } = require(\"shogi.js\");\n\nclass Game extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      shogi: {},\n      board: [],\n      hands: [],\n      selectedBox: {},\n      selectedHand: {},\n      lastMovedBox: {},\n      movableBoxes: [],\n      droppableBoxes: [],\n      moveCount: 1,\n      turn: 0,\n      sfen: \"\",\n      histories: [],\n      reversed: false\n    }\n\n    this.emitter = props.emitter;\n\n    this.emitter.on(\"ai\", (data) => {\n      const { bestmove, bestpv } = data;\n      console.log(\"fire ai\", bestmove, bestpv);\n\n      if (isDropMove(bestmove)) {\n        const { x, y, kind } = parseDropMoveSFEN(bestmove);\n        this.state.shogi.drop(x, y, kind);\n        this.setState({lastMovedBox: {x, y}})\n        this.finishTurn();\n        return;\n      }\n\n      const { fromX, fromY, toX, toY, promote } = parseMoveSFEN(bestmove);\n      this.state.shogi.move(fromX, fromY, toX, toY, promote);\n      this.setState({lastMovedBox: {x: toX, y: toY}})\n      this.finishTurn();\n    });\n\n    this.emitter.on(\"wait\", (data) => {\n      console.log(\"fire wait\");\n      const { shogi, moveCount, histories } = this.state;\n      const length = histories.length;\n      if (length < 2) {\n        return;\n      }\n      const prevSfen = histories[length - 3];\n\n      this.state.shogi.initializeFromSFENString(prevSfen);\n      this.state.shogi.turn = 0;\n\n      this.setState({\n        board: shogi.board,\n        hands: shogi.hands,\n        lastMovedBox: {},\n        selectedBox: {},\n        movableBoxes: [],\n        droppableBoxes: [],\n        turn: 0,\n        moveCount: moveCount - 2,\n        histories: Object.assign([], [...histories.slice(length - 2)]),\n        sfen: prevSfen,\n        reversed: false,\n      });\n    });\n\n    this.emitter.on(\"reverse\", (data) => {\n      console.log(\"fire reverse\");\n      const { reversed } = this.state;\n      this.setState({reversed : !reversed});\n    });\n  }\n\n  componentDidMount(props) {\n    const shogi = new Shogi();\n    // 盤面を初期化\n    this.setState({\n      shogi,\n      board: Object.assign([], shogi.board),\n      hands: Object.assign([], shogi.hands),\n      selectedBox: {},\n      movableBoxes: [],\n      moveCount: 1,\n      turn: 0,\n      sfen: \"lnsgkgsnl/1r5b1/ppppppppp/9/9/9/PPPPPPPPP/1B5R1/LNSGKGSNL w - 1\",\n      histories: [\"lnsgkgsnl/1r5b1/ppppppppp/9/9/9/PPPPPPPPP/1B5R1/LNSGKGSNL w - 1\"]\n    })\n  }\n\n  getCurrentSfen() {\n    return this.state.shogi.toSFENString(this.state.moveCount);\n  }\n\n  select(x, y) {\n    const piece = this.state.shogi.get(x, y);\n    if (!piece || this.state.shogi.turn !== piece.color) {\n      return;\n    }\n\n    const movablePoints = this.state.shogi.getMovesFrom(x, y);\n    this.setState({\n      selectedBox: {x, y},\n      movableBoxes: movablePoints.map(x => x.to),\n      droppableBoxes: []\n    });\n  }\n\n  selectHand(color, kind) {\n    const { shogi } = this.state;\n    if (shogi.turn !== color) {\n      return;\n    }\n    this.setState({\n      selectedHand: {kind},\n      movableBoxes: [],\n      droppableBoxes: shogi.getDropsBy(color).map(x => x.to)\n    });\n  }\n\n  move(x, y) {\n    const { shogi, board, selectedBox } = this.state;\n    const piece = shogi.get(selectedBox.x, selectedBox.y);\n\n    const nextBoard = _.cloneDeep(board);\n    nextBoard[selectedBox.x - 1][selectedBox.y -1] = undefined;\n    nextBoard[x - 1][y - 1] = piece;\n\n    if (isChecked(shogi.turn, nextBoard)) {\n      window.alert(\"王手です\");\n      return;\n    }\n\n    let promote = false;\n    if (canPromote(piece.kind, piece.color, selectedBox.y, y)) {\n      promote = window.confirm(\"成りますか?\");\n    }\n\n    shogi.move(selectedBox.x, selectedBox.y, x, y, promote);\n    this.finishTurn();\n  }\n\n  drop(x, y) {\n    const { shogi, selectedHand } = this.state;\n    shogi.drop(x, y, selectedHand.kind);\n    this.finishTurn();\n  }\n\n  finishTurn() {\n    const { shogi, moveCount, histories } = this.state;\n    const sfen = this.getCurrentSfen();\n    this.setState({\n      board: _.cloneDeep(shogi.board),\n      hands: _.cloneDeep(shogi.hands),\n      selectedBox: {},\n      movableBoxes: [],\n      droppableBoxes: [],\n      turn: shogi.turn,\n      moveCount: moveCount + 1,\n      histories: Object.assign([], [...histories, sfen]),\n      sfen\n    })\n    this.emitter.emit(\"finishTurn\", shogi.turn);\n  }\n\n  reset() {\n    this.setState({\n      selectedBox: {},\n      selectedHand: {},\n      movableBoxes: [],\n      droppableBoxes: []\n    })\n  }\n\n  isLastMovedBox(x, y) {\n    return this.state.lastMovedBox.x === x && this.state.lastMovedBox.y === y;\n  }\n\n  handleClickBox(x, y) {\n    // 持ち駒を選択中で、かつ置ける場所をクリックした場合\n    if (!_.isEmpty(this.state.selectedHand) && isDroppableBox(this.state, x, y)) {\n      this.drop(x, y);\n      return;\n    }\n    // 何も選択していない場合\n    if (_.isEmpty(this.state.selectedBox)) {\n      this.select(x, y)\n      return;\n    }\n    // 盤上の駒を選択中で移動可能な場所をクリックした場合\n    else if (isMovableBox(this.state, x, y)) {\n      this.move(x, y);\n      return;\n    }\n\n    this.reset();\n  }\n\n  handleClickHand(color, kind) {\n    if (_.isEmpty(this.state.selectedHand)) {\n      this.selectHand(color, kind);\n      return;\n    }\n  }\n\n  render() {\n    const { shogi, board, reversed } = this.state;\n\n    const getHandsSummary = (color) => {\n      if (_.isEmpty(shogi)) {\n        return {}\n      }\n      return shogi.getHandsSummary(color);\n    }\n\n    const isReversed = this.state.reversed;\n    const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const reverseNumbers = [9, 8, 7, 6, 5, 4, 3, 2, 1];\n\n    // 先手番視点では左から 9, 8, 7 ...\n    const headNavNumbers = isReversed ? numbers : reverseNumbers;\n\n    // 先手番視点では上から 一, 二, 三 ...\n    const sideNavNumbers = isReversed ? reverseNumbers : numbers;\n\n    const gameRows = [];\n\n    if (board.length > 0) {\n      sideNavNumbers.forEach(y => {\n        headNavNumbers.forEach(x => {\n          const piece = board[x-1][y-1] || {};\n          gameRows.push({piece, x, y});\n        })\n      })\n    }\n\n    const topHandsSummary = getHandsSummary(isReversed ? Color.Black : Color.White);\n    const bottomHandsSummary = getHandsSummary(isReversed ? Color.White : Color.Black);\n\n    return (\n      <div style={{margin: \"0 auto\", maxWidth: \"360px\"}}>\n        <Hands>\n          { Object.keys(topHandsSummary).filter(kind => topHandsSummary[kind] > 0).map(kind => (\n            <Hand onClick={() => this.handleClickHand(Color.White, kind)} key={kind} kind={kind} count={topHandsSummary[kind]} />\n          )) }\n        </Hands>\n        <Board>\n          {gameRows.map(({piece, x, y}) => (\n            <Box key={x+\"-\"+y}\n              overlay={isMovableBox(this.state, x, y) || isDroppableBox(this.state, x, y)}\n              strong={!isMovableBox(this.state, x, y) && this.isLastMovedBox(x, y)}\n              onClick={() => this.handleClickBox(x, y)}\n            >\n              {\n                piece && (<Piece reversed={isReversed} color={piece.color} kind={piece.kind} blink={this.isLastMovedBox(x, y)} />)\n              }\n            </Box>\n          ))}\n        </Board>\n        <Hands>\n          { Object.keys(bottomHandsSummary).filter(kind => bottomHandsSummary[kind] > 0).map(kind => (\n            <Hand onClick={() => this.handleClickHand(Color.Black, kind)} key={kind} kind={kind} count={bottomHandsSummary[kind]} />\n          )) }\n        </Hands>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport { EventEmitter } from \"events\";\nimport axios from 'axios';\nimport qs from 'qs';\n\nimport Game from './Game';\n\n// const url = \"http://localhost:9000\"\nconst url = \"https://t3ayycpoqg.execute-api.ap-northeast-1.amazonaws.com/dev/\";\n//  __?byoyomi=1&position=\"lnsgkg1nl/1r5s1/pppppp1pp/6p2/4B4/2P6/PP1PPPPPP/7R1/LNSGKGSNL w b 1\"\n\nfunction getBestMove(sfen) {\n\n  const q = qs.stringify({\n    byoyomi: 1,\n    sfen: `sfen ${sfen}`\n  });\n\n  return axios.get(`${url}/api/gikou?${q}`).catch(console.error);\n}\n\nfunction warmup() {\n  return axios.get(`${url}/api/setup`).catch(console.error);\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      nextMove: \"\",\n      pv: {}\n    };\n    this.emitter = new EventEmitter();\n    this.emitter.on(\"finishTurn\", (color) => {\n      if (color === 1) {\n        this.handleClickAI();\n      }\n    });\n    warmup();\n  }\n\n  handleChange(event) {\n    this.setState({nextMove: event.target.value});\n  }\n\n  handleClick(event) {\n    this.emitter.emit(\"moveNext\", this.state.nextMove);\n    event.preventDefault();\n  }\n\n  async handleClickAI() {\n    const result = await getBestMove(this.game.getCurrentSfen());\n    console.log(result.data);\n    this.setState({pv: result.data.bestpv});\n    this.emitter.emit(\"ai\", result.data);\n  }\n\n  async handleClickWait() {\n    this.emitter.emit(\"wait\");\n  }\n\n  async handleClickReverse() {\n    this.emitter.emit(\"reverse\");\n  }\n\n  render() {\n    const { pv } = this.state;\n\n    let situation = \"互角\";\n    if (pv.score_cp < -500) {\n      situation = \"優勢\";\n    } else if (pv.score_cp > 500) {\n      situation = \"劣勢\";\n    }\n\n    return (\n      <div>\n        <div style={{textAlign: \"center\"}}>\n          <h1 style={{fontSize: \"1em\"}}>技巧v2.0.2</h1>\n        </div>\n        <Game\n          emitter={this.emitter}\n          observable={this.observable}\n          ref={(game) => { this.game = game }}\n        />\n        <div style={{textAlign: \"center\"}}>\n          <div>\n            <button onClick={this.handleClickWait.bind(this)}>Wait</button>\n            {\" \"}\n            <button onClick={this.handleClickAI.bind(this)}>Hint</button>\n            {\" \"}\n            <button onClick={this.handleClickReverse.bind(this)}>Reverse</button>\n          </div>\n          <p>戦況: {(pv.score_cp || 0) * - 1} {situation}</p>\n          <p>{JSON.stringify(pv)}</p>\n          {/*\n          <label>\n            Next Move:\n            <input type=\"text\" value={this.state.nextMove} onChange={this.handleChange.bind(this)} placeholder=\"7g7f\" />\n          </label>\n          <input type=\"submit\" value=\"Submit\" onClick={this.handleClick.bind(this)} />\n          <div>\n            <input type=\"submit\" value=\"AI\" onClick={this.handleClickAI.bind(this)} />\n          </div>\n          */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker';\n\nrender(\n  <App />\n  , document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}